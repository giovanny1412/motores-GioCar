<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="2~.rXKw0zKF[boUvr``p" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="[NCS7}oB5A[5$NmvrDqY"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace motores {" line1="" line2="    // Enumeración para las direcciones del motor" line3="    enum MotorDirection {" line4="        Adelante," line5="        Atras" line6="    }" line7="" line8="    // Definición del bloque para activar el motor 1" line9="    //% blockId=activarMotor1 block=&quot;activar motor 1 en dirección %direccion|con velocidad %velocidad&quot;" line10="    export function activarMotor1(direccion: MotorDirection, velocidad: number): void {" line11="        let pinMotor1A = DigitalPin.P0; // Pin para el motor 1" line12="        let pinMotor1B = DigitalPin.P1; // Pin para el motor 1" line13="" line14="        // Configurar pines como salidas" line15="        pins.digitalWritePin(pinMotor1A, 0);" line16="        pins.digitalWritePin(pinMotor1B, 0);" line17="" line18="        // Controlar motor 1" line19="        if (direccion == MotorDirection.Adelante) {" line20="            pins.digitalWritePin(pinMotor1A, 1);" line21="            pins.digitalWritePin(pinMotor1B, 0);" line22="        } else if (direccion == MotorDirection.Atras) {" line23="            pins.digitalWritePin(pinMotor1A, 0);" line24="            pins.digitalWritePin(pinMotor1B, 1);" line25="        }" line26="" line27="        // Controlar velocidad (PWM)" line28="        controlMotorVelocidad(pinMotor1A, velocidad);" line29="    }" line30="" line31="    // Definición del bloque para activar el motor 2" line32="    //% blockId=activarMotor2 block=&quot;activar motor 2 en dirección %direccion|con velocidad %velocidad&quot;" line33="    export function activarMotor2(direccion: MotorDirection, velocidad: number): void {" line34="        let pinMotor2A = DigitalPin.P2; // Pin para el motor 2" line35="        let pinMotor2B = DigitalPin.P3; // Pin para el motor 2" line36="" line37="        // Configurar pines como salidas" line38="        pins.digitalWritePin(pinMotor2A, 0);" line39="        pins.digitalWritePin(pinMotor2B, 0);" line40="" line41="        // Controlar motor 2" line42="        if (direccion == MotorDirection.Adelante) {" line43="            pins.digitalWritePin(pinMotor2A, 1);" line44="            pins.digitalWritePin(pinMotor2B, 0);" line45="        } else if (direccion == MotorDirection.Atras) {" line46="            pins.digitalWritePin(pinMotor2A, 0);" line47="            pins.digitalWritePin(pinMotor2B, 1);" line48="        }" line49="" line50="        // Controlar velocidad (PWM)" line51="        controlMotorVelocidad(pinMotor2A, velocidad);" line52="    }" line53="" line54="    // Función para controlar la velocidad del motor usando PWM" line55="    function controlMotorVelocidad(pin: DigitalPin, velocidad: number): void {" line56="        let pwmValue = Math.map(velocidad, 0, 100, 0, 1023); // Mapea la velocidad de 0-100 a PWM de 0-1023" line57="        pins.analogWritePin(pin, pwmValue); // Escribe el valor PWM al pin" line58="    }" line59="}" numlines="60"></mutation></block></statement></block></xml>